{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-sources-nx/./apps/api/src/app/app.controller.ts","webpack://my-sources-nx/./apps/api/src/app/app.module.ts","webpack://my-sources-nx/./apps/api/src/app/app.service.ts","webpack://my-sources-nx/./libs/admin/backend/src/index.ts","webpack://my-sources-nx/./libs/admin/backend/src/lib/admin.module.ts","webpack://my-sources-nx/./libs/admin/backend/src/lib/admin.resolver.ts","webpack://my-sources-nx/./libs/admin/backend/src/lib/admin.service.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/index.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/auth.module.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/auth.resolver.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/auth.service.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/decorators/ctx-user.decorator.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/decorators/public.decorator.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/decorators/roles.decorator.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/dto/auth-login.input.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/dto/auth-register.input.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/guards/gql-auth.guards.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/guards/roles.guards.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/models/role.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/models/user.ts","webpack://my-sources-nx/./libs/security/auth/backend/src/lib/strategies/jwt.strategy.ts","webpack://my-sources-nx/./libs/security/crypt/src/index.ts","webpack://my-sources-nx/./libs/security/crypt/src/lib/crypt.helper.ts","webpack://my-sources-nx/./libs/security/crypt/src/lib/crypt.module.ts","webpack://my-sources-nx/./libs/source/backend/src/index.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/dto/create-source-input.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/dto/create-source-type-input.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/dto/create-tag-input.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/dto/update-source-input.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/dto/update-source-type-input.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/dto/update-tag-input.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/models/source-type.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/models/source.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/models/tag.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/resolvers/source-type.resolver.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/resolvers/source.resolver.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/resolvers/tag.resolver.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/source-prisma-includes.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/source.module.ts","webpack://my-sources-nx/./libs/source/backend/src/lib/source.service.ts","webpack://my-sources-nx/./libs/user/backend/src/index.ts","webpack://my-sources-nx/./libs/user/backend/src/lib/user.module.ts","webpack://my-sources-nx/./libs/user/backend/src/lib/user.service.ts","webpack://my-sources-nx/./libs/utils/config/backend/src/index.ts","webpack://my-sources-nx/./libs/utils/config/backend/src/lib/config/configuration.ts","webpack://my-sources-nx/./libs/utils/config/backend/src/lib/config/validation.ts","webpack://my-sources-nx/./libs/utils/config/backend/src/lib/core.module.ts","webpack://my-sources-nx/./libs/utils/config/backend/src/lib/core.resolver.ts","webpack://my-sources-nx/./libs/utils/log/backend/src/index.ts","webpack://my-sources-nx/./libs/utils/log/backend/src/lib/enums/colors.enum.ts","webpack://my-sources-nx/./libs/utils/log/backend/src/lib/log.module.ts","webpack://my-sources-nx/./libs/utils/log/backend/src/lib/log.service.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/index.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/data-set/my-sources-init.dataset.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/dto/admin-update-user-inupt.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/dto/create-user-dto.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/dto/created-role.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/dto/update-user-inupt.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/enums/role.enum.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/prisma/prisma-includes.ts","webpack://my-sources-nx/./libs/utils/types/backend/src/lib/struct.module.ts","webpack://my-sources-nx/external commonjs \"@nestjs/apollo\"","webpack://my-sources-nx/external commonjs \"@nestjs/common\"","webpack://my-sources-nx/external commonjs \"@nestjs/config\"","webpack://my-sources-nx/external commonjs \"@nestjs/core\"","webpack://my-sources-nx/external commonjs \"@nestjs/graphql\"","webpack://my-sources-nx/external commonjs \"@nestjs/jwt\"","webpack://my-sources-nx/external commonjs \"@nestjs/passport\"","webpack://my-sources-nx/external commonjs \"@nestjs/swagger\"","webpack://my-sources-nx/external commonjs \"@prisma/client\"","webpack://my-sources-nx/external commonjs \"apollo-server-express\"","webpack://my-sources-nx/external commonjs \"bcryptjs\"","webpack://my-sources-nx/external commonjs \"joi\"","webpack://my-sources-nx/external commonjs \"passport-jwt\"","webpack://my-sources-nx/external commonjs \"tslib\"","webpack://my-sources-nx/webpack/bootstrap","webpack://my-sources-nx/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('/getData')\n  getData() {\n    return this.appService.getData()\n  }\n}\n","import { CoreModule } from '@jbhive/config_be'\nimport { UserModule } from '@jbhive/user_be'\nimport { AuthModule } from '@jbhive/auth_be'\nimport { SourceModule } from '@jbhive/source_be'\nimport { AdminModule } from '@jbhive/admin_be'\nimport { CryptModule } from '@jbhive/crypt'\nimport { Module } from '@nestjs/common'\n\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\n\n@Module({\n  imports: [CoreModule, UserModule, AuthModule, SourceModule, AdminModule, CryptModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' }\n  }\n}\n","export * from './lib/admin.module'\n","import { UserModule } from '@jbhive/user_be';\nimport { LogModule } from '@jbhive/log_be';\nimport { Module } from '@nestjs/common'\nimport { AdminResolver } from './admin.resolver';\nimport { AdminService } from './admin.service';\n\n@Module({\n  imports: [UserModule, LogModule],\n  controllers: [],\n  providers: [AdminResolver, AdminService],\n  exports: [],\n})\nexport class AdminModule {}\n","\nimport { Args, Query, Resolver, Mutation,  } from '@nestjs/graphql';\nimport { Logger, UseGuards } from '@nestjs/common'\nimport { CtxUser, GqlAuthGuard, Public, Roles, RolesGuard, User } from '@jbhive/auth_be'\nimport { Role, UpdateUserInput, AdminUpdateUserInput } from \"@jbhive/types_be\";\nimport { LogService } from 'libs/utils/log/backend/src';\nimport { Source } from 'libs/source/backend/src';\nimport { AdminService } from './admin.service';\n\n@UseGuards(RolesGuard)\n@Resolver()\nexport class AdminResolver {\n    constructor(private readonly service: AdminService, private readonly log: LogService) {}\n\n\n    @Roles(Role.Astek, Role.Admin, Role.Lord)\n    @Mutation( () => User, {nullable: true})\n    async updateRoleUser(\n        @CtxUser() user: User,\n        @Args('userId') userId: number,\n        @Args('roleId') roleId: number)  {\n        this.log.logMethod(`Resolver.updateRoleUser(${userId}, ${roleId})`)\n        return this.service.updateRoleUser(user.id, userId, roleId)\n    }\n\n    @Roles(Role.Astek, Role.Admin, Role.Lord)\n    @Mutation( () => [User], {nullable: true})\n    async loadAllDesactivatedUsers(\n        @CtxUser() user: User)  {\n        this.log.logMethod(`Resolver.loadAllDesactivatedUsers(${user.id})`)\n        return this.service.loadAllDesactivatedUsers(user.id)\n    }\n\n    @Roles(Role.Astek, Role.Admin, Role.Lord)\n    @Mutation( () => [User], {nullable: true})\n    async loadAllActivatedUsers(\n        @CtxUser() user: User)  {\n        this.log.logMethod(`Resolver.loadAllActivatedUsers(${user.id})`)\n        return this.service.loadAllActivatedUsers(user.id)\n    }\n\n    \n\n    @Roles(Role.Astek, Role.Admin, Role.Lord)\n    @Mutation( () => User, {nullable: true})\n    async updateUser(\n        @CtxUser() user: User,\n        @Args('userId') userId: number,\n        @Args('input') input: UpdateUserInput)  {\n        this.log.logMethod(`Resolver.updateUser(${userId}`)\n        return this.service.updateUser(user.id, userId, input)\n    }\n\n    @Roles(Role.Astek, Role.Admin, Role.Lord)\n    @Mutation( () => User, {nullable: true})\n    async updateAdminUser(\n        @CtxUser() user: User,\n        @Args('userId') userId: number,\n        @Args('input') input: AdminUpdateUserInput)  {\n        this.log.logMethod(`Resolver.updateAdminUser(${userId}`)\n        return this.service.updateAdminUser(user.id, userId, input)\n    }\n\n    @Mutation( () => User, {nullable: true})\n    async updateMyself(\n        @CtxUser() user: User,\n        @Args('input') input: UpdateUserInput)  {\n        this.log.logMethod(`Resolver.updateMyself(${user.id}`)\n        return this.service.updateMyself(user.id, input)\n    }\n\n    @Roles(Role.Astek, Role.Admin)\n    @Mutation( () => Boolean, {nullable: true})\n    async deleteUser(\n        @CtxUser() user: User,\n        @Args('userId') userId: number)  {\n        this.log.logMethod(`Resolver.deleteUser(${userId}`)\n        return this.service.deleteUser(user.id, userId)\n    }\n}","import { UserService } from \"@jbhive/user_be\";\nimport { LogService } from \"@jbhive/log_be\";\nimport { Role, UpdateUserInput, AdminUpdateUserInput, PrismaIncludes } from \"@jbhive/types_be\";\nimport { Injectable, Logger, MethodNotAllowedException, NotFoundException, OnModuleDestroy, OnModuleInit } from \"@nestjs/common\";\nimport { ForbiddenError } from \"apollo-server-express\";\nimport { Prisma, PrismaClient, Tag } from \"@prisma/client\";\n\n@Injectable()\nexport class AdminService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n   \n    \n\n    constructor(private readonly data: UserService, private readonly log: LogService) {\n        super()\n     }\n\n     async onModuleInit() {\n        await this.$connect()\n    }\n\n    async onModuleDestroy() {\n        await this.$disconnect()\n    }\n\n\n    async updateRoleUser(loggedUserId: number, userId: number, roleId: number) {\n\n        // Find user\n        const userFound = await this.data.findUser(userId)\n        if (!userFound) {\n            throw new NotFoundException(`Can't update Role of user ${userId}, user not found`)\n        }\n\n        if (userFound.roleId === Role.Astek) {\n            throw new ForbiddenError(`User ${userId} is granted Astek, no one can update its role`)\n        }\n\n        if (roleId === Role.Astek) {\n            throw new ForbiddenError(`User ${userId} can't be granted Astek, only one allowed in the application`)\n        }\n\n        // find looged user\n        const loggedUserFound = await this.data.findUser(loggedUserId)\n        if (!loggedUserFound) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to perform update role operation, user not found`)\n        }\n\n        if (loggedUserFound.roleId < userFound.roleId) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to perform update role operation on user ${userId}, logged user has less privileges`)\n        }\n\n        if (loggedUserFound.roleId < roleId) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to grant user ${userId} to a higher level of privileges than himself`)\n        }\n\n        return this.data.updateRoleUser(userId, roleId)\n    }\n\n    async updateUser(loggedUserId: number, userId: number, input: UpdateUserInput) {\n        const userFound = await this.data.findUser(userId)\n        if (!userFound) {\n            throw new NotFoundException(`Can't update User ${userId}, user not found`)\n        }\n\n        const loggedUserFound = await this.data.findUser(loggedUserId)\n        if (!loggedUserFound) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to perform update role operation, user not found`)\n        }\n\n        if (loggedUserFound.roleId < userFound.roleId) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to perform update operation on user ${userId}, logged user has less privileges`)\n        }\n\n        Logger.log('VOILLLAAAAA')\n\n        return this.data.updateUser(userId, input)\n    }\n\n    async updateAdminUser(loggedUserId: number, userId: number, input: AdminUpdateUserInput) {\n        const userFound = await this.data.findUser(userId)\n        if (!userFound) {\n            throw new NotFoundException(`Can't update User ${userId}, user not found`)\n        }\n\n        const loggedUserFound = await this.data.findUser(loggedUserId)\n        if (!loggedUserFound) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to perform update role operation, user not found`)\n        }\n\n        if (loggedUserFound.roleId < userFound.roleId) {\n            throw new NotFoundException(`User ${loggedUserId} not allowed to perform update operation on user ${userId}, logged user has less privileges`)\n        }\n\n        Logger.log('VOILLLAAAAA')\n\n        return this.data.updateAdminUser(userId, input)\n    }\n\n    async deleteUser(loggedUserId: any, userId: number) {\n        const userFound = await this.data.findUser(loggedUserId)\n        const loggedFound = await this.data.findUser(userId)\n\n        if (!userFound ||! loggedFound) {\n            throw new NotFoundException(`User ${loggedUserId} can't delete user ${userFound}, at least one does not exists`)\n        }\n\n        if (userFound.roleId <= loggedFound.roleId){\n            throw new MethodNotAllowedException(`User ${loggedUserId} not allowed to delete user ${userFound}`)\n        }\n\n        return await this.data.deleteUser(userId)\n    }\n\n\n    async updateMyself(id: number, input: UpdateUserInput) {\n        const userFound = await this.data.findUser(id)\n        if (!userFound) {\n            throw new NotFoundException(`Can't update User ${id}, user not found`)\n        }\n\n        if( userFound.pseudo !== input.pseudo){\n            const userPseudoFound = await this.data.findUserByPseudo(input.pseudo)\n            if (userPseudoFound) {\n                throw new NotFoundException(`User with pseudo ${input.pseudo} already exist`)\n            }\n        }\n\n        if( userFound.email !== input.email){\n            const userEmailFound = await this.data.findUserByEmail(input.email)\n            if (userEmailFound) {\n                throw new NotFoundException(`User with email ${input.email} already exist`)\n            }\n        }\n\n        if( userFound.nickname !== input.nickname){\n            const userNicknameFound = await this.data.findUserByNickname(input.nickname)\n            if (userNicknameFound) {\n                throw new NotFoundException(`User with nickname ${input.nickname} already exist`)\n            }\n        }\n\n        return this.data.updateUser(id, input)\n    }\n\n    async loadAllDesactivatedUsers(id: number) {\n        const loggedFound = await this.data.findUserById(id)\n        if (!loggedFound) {\n            throw new NotFoundException(`Can't load all deactivated users, User ${id} not found`)\n        }\n\n        const found = await this.user.findMany({\n            where: {\n                activated: false,\n                hidden: false,\n                roleId: {\n                    lt: loggedFound.role.id\n                }\n            },\n            include: PrismaIncludes.userIncludes\n        })\n\n        Logger.error('loadAllDesactivatedUsers - found: ', found)\n        return found\n    }\n\n    async loadAllActivatedUsers(id: number) {\n        const loggedFound = await this.data.findUserById(id)\n        if (!loggedFound) {\n            throw new NotFoundException(`Can't load all activated users, User ${id} not found`)\n        }\n\n        const found = await this.user.findMany({\n            where: {\n                activated: true,\n                hidden: false,\n                roleId: {\n                    lt: loggedFound.role.id\n                }\n            },\n            include: PrismaIncludes.userIncludes\n        })\n\n        Logger.error('loadAllActivatedUsers - found: ', found)\n        return found\n    }\n\n}","export * from './lib/auth.module'\nexport * from './lib/guards/gql-auth.guards'\nexport * from './lib/guards/roles.guards'\n// export * from './lib/enums/role.enum'\nexport * from './lib/decorators/ctx-user.decorator'\nexport * from './lib/decorators/roles.decorator'\nexport * from './lib/decorators/public.decorator'\nexport * from './lib/models/user'\n","import { Module } from '@nestjs/common'\nimport { AuthResolver } from './auth.resolver';\nimport { AuthService } from './auth.service';\nimport { UserModule } from '@jbhive/user_be'\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { GqlAuthGuard } from './guards/gql-auth.guards';\nimport { LogModule } from '@jbhive/log_be';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    LogModule,\n    UserModule, \n    JwtModule.registerAsync({\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('jwt_secret'),\n        signOptions: { expiresIn: +configService.get('jwt_expire') },\n      }),\n      inject: [ConfigService],\n    })\n  ],\n  controllers: [],\n  providers: [AuthResolver, AuthService, JwtStrategy, GqlAuthGuard],\n  exports: [],\n})\nexport class AuthModule {}\n","import { Logger } from \"@nestjs/common\";\nimport { Args,  Resolver, Mutation } from \"@nestjs/graphql\";\nimport { AuthService } from \"./auth.service\";\nimport { AuthLoginInput } from \"./dto/auth-login.input\";\nimport { AuthRegisterInput } from \"./dto/auth-register.input\";\nimport { User } from \"./models/user\";\n// import { UserToken } from \"./models/user-token\";\n\n\n@Resolver()\nexport class AuthResolver {\n\n    constructor(private readonly service: AuthService){}\n\n    @Mutation( () => User)\n    login(@Args({ name: 'input', type: () => AuthLoginInput }) input: AuthLoginInput){\n        return this.service.login(input)\n    }\n\n    @Mutation( () => User)\n    register(@Args({ name: 'input', type: () => AuthRegisterInput }) input: AuthRegisterInput){\n        return this.service.register(input)\n    }\n\n}","import { UserService } from \"@jbhive/user_be\";\nimport { Color, LogService } from \"libs/utils/log/backend/src\";\nimport { MethodNotAllowedException, BadRequestException, HttpException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { CryptHelper } from \"@jbhive/crypt\";\nimport { AuthLoginInput } from \"./dto/auth-login.input\";\nimport { AuthRegisterInput } from \"./dto/auth-register.input\";\nimport { JwtDto } from \"./dto/jwt.dto\";\n// import { Role } from \"./enums/role.enum\";\nimport { Role } from \"@jbhive/types_be\";\n// import { UserToken } from \"./models/user-token\";\nimport { User } from \"./models/user\";\nimport { throwError } from \"rxjs\";\n\n@Injectable()\nexport class AuthService {\n    \n    \n    constructor(\n        private readonly data: UserService,\n        private readonly jwt: JwtService,\n        private readonly log: LogService,\n        private readonly config: ConfigService\n        ) {}\n\n\n    async login(input: AuthLoginInput) : Promise<User> {\n        Logger.log(`login:`, input)\n        const found = await this.data.findUserByNickname(input.nickname.toLowerCase())\n        if (!found){\n            this.log.err(`User with nickname ${input.nickname} does not exists`)\n            const httpErrorResponse =  { errors:  {  credentials: [`User with nickname ${input.nickname} does not exists in the database`], }}\n            throw new BadRequestException(JSON.stringify(httpErrorResponse))\n        } else {\n            Logger.debug(`user by nickname found:`, found)\n        }\n\n        if (!found.activated){\n            this.log.err(`User with nickname ${input.nickname} not activated`)\n            const httpErrorResponse =  { errors:  {  credentials: [`User with nickname ${input.nickname} is not activated`], }}\n            throw new BadRequestException(JSON.stringify(httpErrorResponse))\n        }\n\n        const passwordValid = await CryptHelper.validate(input.password, found.password)\n        if (!passwordValid) {\n            this.log.err(`Invalid password`)\n            const httpErrorResponse =  { errors:  {  credentials: [`Invalid password`], }}\n            throw new BadRequestException(JSON.stringify(httpErrorResponse))\n        } else {\n            Logger.debug(`passwordValid:`, passwordValid)\n        }\n\n        const response = {\n            ...found,\n            token: this.signToken(found.id)\n        }\n        Logger.debug(`response: ${JSON.stringify(response)}`)      \n        return response\n    }\n\n\n    async register(input: AuthRegisterInput) {         \n        this.checkRegisterFieldsOk(input)        \n        await this.manageNoDuplicatedEntryErros(input)\n\n        const password = await CryptHelper.hash(input.password)    \n        const created = await this.data.createUser({email: input.email, nickname: input.nickname, password: password, pseudo: input.pseudo, roleId: 0}) \n\n        const response = {\n            ...created,\n            role: {\n                id: 0,\n                name: 'user'\n            }\n        }      \n        Logger.log(`response:`, response) \n        return response\n    }\n    \n\n    checkRegisterFieldsOk(input: AuthRegisterInput) {\n        let httpErrorResponse =  {\n            errors: \n            {\n                email: [],\n                nickname: [],\n                pseudo: [],\n                password: [],\n            }\n        }\n\n        let isEmailValids: boolean = true\n        let isNicknameValids: boolean = true\n        let isPseudoValids: boolean = true\n        let isPasswordValids: boolean = true        \n\n        if (input.email.trim().length ===0 || input.email.length < 10) {\n            this.manageErrorMessage(\n                httpErrorResponse.errors.email, \n                'email too short (min size 10)', \n                `Cannot register, the email must be 10 characters long at least` \n            )\n            if (isEmailValids){ isEmailValids = false }\n        }\n\n        if (input.nickname.includes(' ')) {\n            this.manageErrorMessage(\n                httpErrorResponse.errors.nickname, \n                'nickname contains space', \n                `Cannot register, the nickname must have no space character` \n            )\n            if (isNicknameValids){ isNicknameValids = false }\n        }\n\n        if (input.nickname.trim().length ===0 || input.nickname.length < 3) {\n            this.manageErrorMessage(\n                httpErrorResponse.errors.nickname, \n                'nickname empty or too short (min size 3)', \n                `Cannot register, the nickname must be 3 characters long at least` \n            )\n            if (isNicknameValids){ isNicknameValids = false }\n        }\n\n        if (input.pseudo.includes(' ')) {\n            this.manageErrorMessage(\n                httpErrorResponse.errors.pseudo, \n                'pseudo contains space', \n                `Cannot register, the pseudo must have no space character` \n            )\n            if (isPseudoValids){ isPseudoValids = false }\n        }\n\n        if (input.pseudo.trim().length ===0 || input.pseudo.length < 3) {\n            this.manageErrorMessage(\n                httpErrorResponse.errors.pseudo, \n                'pseudo empty or too short (min size 3)', \n                `Cannot register, the pseudo must be 3 characters long at least` \n            )\n            if (isPseudoValids){ isPseudoValids = false }\n        }\n\n        if (input.password.trim().length ===0 || input.password.length < 4) {\n            this.manageErrorMessage(\n                httpErrorResponse.errors.password, \n                'password empty or too short (min size 4)', \n                `Cannot register, the password must be 4 characters long at least`\n            )\n            if (isPasswordValids){ isPasswordValids = false }\n        }\n\n        if ( !isEmailValids || ! isPasswordValids || ! isPasswordValids || !isNicknameValids){\n            if (isEmailValids) { delete httpErrorResponse.errors.email }\n            if (isPseudoValids) { delete httpErrorResponse.errors.pseudo }\n            if (isPasswordValids) { delete httpErrorResponse.errors.password }\n            if (isNicknameValids) { delete httpErrorResponse.errors.nickname }\n\n            throw new BadRequestException(JSON.stringify(httpErrorResponse))\n        }\n    }\n\n    private manageErrorMessage(listToPush: string[], message: string, logErrMessage: string){\n        listToPush.push(message)\n        this.log.err(logErrMessage)\n    }\n\n    async manageNoDuplicatedEntryErros(input: AuthRegisterInput) {\n        \n        let httpErrorResponse =  {\n            errors: \n            {\n                email: [],\n                pseudo: [],\n                nickname: [],\n            }\n        }\n\n        let isEmailValids: boolean = true\n        let isPseudoValids: boolean = true  \n        let isNicknameValids: boolean = true    \n\n        const foundByEmail = await this.data.findUserByEmail(input.email.toLowerCase())\n        if (foundByEmail){\n            this.manageErrorMessage(httpErrorResponse.errors.email,\n                'email already exists', `Cannot register with email ${input.email}`)\n            this.log.err(`Cannot register with email ${input.email},email already in db`)\n            if (isEmailValids){ isEmailValids = false }\n            \n        }\n\n        const foundByPseudo = await this.data.findUserByPseudo(input.pseudo.toLowerCase())\n        if (foundByPseudo){\n            this.manageErrorMessage(httpErrorResponse.errors.pseudo,\n                'pseudo already exists', `Cannot register with pseudo ${input.email},pseudo already in db`)\n                if (isPseudoValids){ isPseudoValids = false }\n        }\n\n        const foundByNickname = await this.data.findUserByNickname(input.nickname.toLowerCase())\n        if (foundByNickname){\n            this.manageErrorMessage(httpErrorResponse.errors.nickname,\n                'nickname already exists', `Cannot register with nickname ${input.nickname},pseudo already in db`)\n                if (isNicknameValids){ isNicknameValids = false }\n        }\n\n        if (!isEmailValids || !isPseudoValids || !isNicknameValids) {\n            if (isEmailValids) { delete httpErrorResponse.errors.email }\n            if (isPseudoValids) { delete httpErrorResponse.errors.pseudo }\n            if (isNicknameValids) { delete httpErrorResponse.errors.nickname }\n\n            throw new BadRequestException(JSON.stringify(httpErrorResponse))\n        }\n    }\n\n    signToken(id: number): string {\n        const payload: JwtDto = { userId: id, roleId: Role.User}\n        return this.jwt.sign(payload)\n    }\n\n    validateUser(userId: number) {\n        return this.data.findUserById(userId)\n    }\n}","import { createParamDecorator } from \"@nestjs/common\";\nimport { GqlExecutionContext } from \"@nestjs/graphql\";\n\n\nexport const CtxUser = createParamDecorator(\n    (data, ctx) => GqlExecutionContext.create(ctx).getContext().req.user\n)","import { SetMetadata } from '@nestjs/common';\n/**\n * Decorator allowing to set a endpoint of a controller public\n */\nexport const IS_PUBLIC_KEY = 'isPublic';\n\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);","import { SetMetadata } from '@nestjs/common';\nimport { Role } from \"@jbhive/types_be\";\n\nexport const ROLES_KEY = 'roles';\nexport const Roles = (...roles: Role[]) => SetMetadata(ROLES_KEY, roles);","import { Field, InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class AuthLoginInput{\n\n    @Field()\n    nickname: string\n\n    @Field()\n    password: string\n}","import { Field, InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class AuthRegisterInput{\n\n    @Field()\n    email: string\n\n    @Field()\n    pseudo: string\n\n    @Field()\n    nickname: string\n\n    @Field()\n    password: string\n}","import { Color, LogService } from \"libs/utils/log/backend/src\";\nimport { ExecutionContext, Injectable, Logger } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { GqlExecutionContext } from \"@nestjs/graphql\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { IS_PUBLIC_KEY } from \"../decorators/public.decorator\";\nimport { ROLES_KEY } from \"../decorators/roles.decorator\";\nimport { Role } from \"@jbhive/types_be\";\n\n\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt'){\n\n    constructor(private reflector: Reflector, readonly log: LogService) {\n        super();\n    }\n\n    /**\n     * Transform the 'GraphQl context' into a 'standard HTTP request'\n     */\n    getRequest(context: ExecutionContext) {\n        const ctx = GqlExecutionContext.create(context)\n\n        return ctx.getContext().req\n    }\n\n    canActivate(context: ExecutionContext) {\n        this.log.logGuardMethod(context.getClass().name, context.getHandler().name)\n        const isPublic = this.reflector.getAllAndOverride<boolean>(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            this.log.logGuard(`GqlAuthGuard`, `GqlAuthGuard: public route, request allowed`)\n            return true;\n        } else {\n            this.log.logGuard(`GqlAuthGuard`, `GqlAuthGuard: user logged`)\n        }\n\n        this.log.logGuard(`XXXXX`, `super.canActivate from GplAuthGuard`)\n        return super.canActivate(context);\n    }\n\n    \n\n    getRoles(context: ExecutionContext) {\n        const roles = this.reflector.getAllAndOverride<Role[]>(ROLES_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        return roles;\n    }\n\n}","import { LogService } from \"libs/utils/log/backend/src\";\nimport { Type, CanActivate, ExecutionContext, mixin, Injectable, Inject, UnauthorizedException, Logger } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { GqlExecutionContext } from \"@nestjs/graphql\";\nimport { Observable } from \"rxjs\";\nimport { GqlAuthGuard } from \"./gql-auth.guards\";\n\n@Injectable()\nexport class RolesGuard extends GqlAuthGuard{\n    constructor(reflector: Reflector, log: LogService) {\n        super(reflector, log);\n    }\n\n    async canActivate(context: ExecutionContext) {\n        // this.log.logGuardMethod(context.getClass().name, context.getHandler().name)\n        await super.canActivate(context)\n\n        const roles = super.getRoles(context);\n        if (!roles) {\n            this.log.logGuard(`RolesGuard`, `no role restriction for this endpoint, request allowed`)\n            return true\n        } \n\n        const user = GqlExecutionContext.create(context).getContext().req.user\n        if (!roles.includes(user.roleId)){\n            this.log.logGuard(`RolesGuard`, `user #${user.id} ${user.email} with role ${user.roleId} is not allowed`)\n            return false\n        }        \n\n        this.log.logGuard(`RolesGuard`, `user #${user.id} ${user.email} with role ${user.roleId} allowed to perform the request`)\n        return true\n    }\n}","import { User } from '@jbhive/auth_be'\nimport { Field, ObjectType } from '@nestjs/graphql'\n\n@ObjectType()\nexport class Role {\n\n    @Field({ nullable: true })\n    id: number\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    description?: string\n}\n","import { Field, ObjectType } from '@nestjs/graphql'\nimport { Role } from './role'\n\n@ObjectType()\nexport class User {\n\n    @Field({ nullable: true })\n    id: number\n\n    @Field({ nullable: true })\n    email?: string\n\n    @Field({ nullable: true })\n    pseudo?: string\n\n    @Field({ nullable: true })\n    nickname?: string\n\n    @Field( () => Role, {nullable: true})\n    role: Role\n\n    @Field({ nullable: true })\n    createdAt?: Date\n\n    // @Field({ nullable: true }) --> no field bcs password not exposed\n    password?: string\n\n    hidden?: boolean\n\n    activated?: boolean\n\n    @Field({ nullable: true })\n    token?: string\n}\n","import { Injectable, Logger, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { AuthService } from \"../auth.service\";\nimport { JwtDto } from \"../dto/jwt.dto\";\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\n    constructor(private readonly service: AuthService, private readonly config: ConfigService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: config.get('jwt_secret'),\n            ignoreExpiration: false,\n        })\n    }\n\n    async validate(payload: JwtDto) {\n        Logger.log(\"AIGHTTT !!! payload: \", payload)\n        const user = await this.service.validateUser(payload.userId)\n        if (!user ||  !user?.activated){\n            throw new UnauthorizedException('Not allowed inside')\n        }\n\n        // return payload\n        return user\n    }\n\n\n    // async validate(payload: any) {\n    //     // TODO : can add DB connection in order to retrieve more data for the JWToken\n    //     // --- Can also be used to perform token revocation\n    //     if(process.env.DISPLAY_RESPONSES === 'true') {\n    //         LogC.logMethod(`JwtStrategy.validate(${JSON.stringify(payload)})`, Color.FgYellow );\n    //     } else {\n    //         LogC.logMethod(`JwtStrategy.validate(${payload.pseudo})`, Color.FgYellow );\n    //     }\n        \n    //     return { userId: payload.sub, username: payload.username, role: payload.role };\n    // }\n}","export * from './lib/crypt.module'\nexport * from './lib/crypt.helper'\n","import { Logger } from '@nestjs/common';\nimport { compare, hash } from 'bcryptjs'\n\nexport class CryptHelper {\n\n\n    static validate(password: string, hashedPassword: string): Promise<boolean> {        \n        return compare(password, hashedPassword)\n    }\n\n\n    static hash(password): Promise<string> {\n        return hash(password, 10)\n    }\n}","import { Module } from '@nestjs/common'\nimport { CryptHelper } from './crypt.helper';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class CryptModule {}\n","export * from './lib/source.module'\nexport * from './lib/dto/create-source-input'\nexport * from './lib/dto/create-source-type-input'\nexport * from './lib/dto/create-tag-input'\nexport * from './lib/dto/update-source-input'\nexport * from './lib/dto/update-source-type-input'\nexport * from './lib/dto/update-tag-input'\nexport * from './lib/models/source'","import { User } from \"@jbhive/auth_be\";\nimport { Field, InputType } from \"@nestjs/graphql\";\nimport { SourceType } from \"../models/source-type\";\nimport { Tag } from \"../models/tag\";\n\n\n@InputType()\nexport class CreateSourceInput {\n    @Field()\n    title: string\n\n    @Field({nullable: true})\n    public?: boolean\n\n    @Field({nullable: true})\n    url?: string\n\n    @Field({nullable: true})\n    content?: string\n\n    @Field({nullable: true})\n    description?: string\n\n}","import { Field, InputType } from \"@nestjs/graphql\";\n\n\n@InputType()\nexport class CreateSourceTypeInput {\n    @Field()\n    title: string\n\n    @Field({nullable: true})\n    description?: string\n}","import { Field, InputType } from \"@nestjs/graphql\";\n\n\n@InputType()\nexport class CreateTagInput {\n    @Field()\n    title: string\n\n    @Field({nullable: true})\n    description?: string\n}","import { User } from \"@jbhive/auth_be\";\nimport { Field, InputType } from \"@nestjs/graphql\";\nimport { SourceType } from \"../models/source-type\";\nimport { Tag } from \"../models/tag\";\n\n\n@InputType()\nexport class UpdateSourceInput {\n    @Field({nullable: true})\n    title?: string\n\n    @Field({nullable: true})\n    public?: boolean\n\n    @Field({nullable: true})\n    url?: string\n\n    @Field({nullable: true})\n    content?: string\n\n    @Field({nullable: true})\n    description?: string\n\n    @Field({nullable: true})\n    typeId?: number\n\n    @Field( type => [Number], {nullable: true})\n    tagIds?: number[]\n}","import { Field, InputType } from \"@nestjs/graphql\";\n\n\n@InputType()\nexport class UpdateSourceTypeInput {\n    @Field({nullable: true})\n    title?: string\n\n    @Field({nullable: true})\n    description?: string\n}","import { Field, InputType } from \"@nestjs/graphql\";\n\n\n@InputType()\nexport class UpdateTagInput {\n    @Field()\n    title?: string\n\n    @Field({nullable: true})\n    description?: string\n}","import { User } from \"@jbhive/auth_be\";\nimport { Field, ObjectType } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class SourceType {\n    \n    @Field({nullable: true})\n    id?: string\n\n    @Field({nullable: true})\n    title?: string\n\n    @Field({nullable: true})\n    description?: string\n}","import { User } from \"@jbhive/auth_be\";\nimport { Field, ObjectType, } from \"@nestjs/graphql\";\nimport { SourceType } from \"./source-type\";\nimport { Tag } from \"./tag\";\n// import { IsBoolean, IsString, IsEmail, IsDate, IsUrl } from \"class-validator\";\n\n@ObjectType()\nexport class Source {\n    \n    @Field({nullable: true})\n    id?: string\n\n    @Field({nullable: true})\n    createdAt?: Date\n\n    @Field({nullable: true})\n    public?: boolean\n\n    @Field({nullable: true})\n    title?: string\n\n    @Field({nullable: true})\n    url?:string\n\n    @Field({nullable: true})\n    content?: string\n\n    @Field({nullable: true})\n    description?: string\n\n    @Field( () => SourceType, {nullable: true})\n    type?: SourceType\n\n    @Field( () => [Tag], {nullable: true})\n    tags?: Tag[]\n\n    @Field( () => User, {nullable: true})\n    owner?: User\n\n}","import { User } from \"@jbhive/auth_be\";\nimport { Field, ObjectType } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class Tag {\n    \n    @Field({nullable: true})\n    id?: string\n\n    @Field({nullable: true})\n    createdAt?: Date\n\n    @Field({nullable: true})\n    title?: string\n\n    @Field({nullable: true})\n    description?: string\n\n    @Field( () => User, {nullable: true})\n    author?: User\n\n}","\nimport { Args, Query, Resolver, Mutation } from '@nestjs/graphql';\nimport { Logger, UseGuards } from '@nestjs/common'\nimport { CtxUser, GqlAuthGuard, Public, Roles, RolesGuard, User } from '@jbhive/auth_be'\nimport { Role } from \"@jbhive/types_be\";\nimport { LogService } from 'libs/utils/log/backend/src';\nimport { SourceService } from '../source.service';\nimport { SourceType } from '../models/source-type';\nimport { CreateSourceTypeInput } from '../dto/create-source-type-input';\nimport { UpdateSourceTypeInput } from '../dto/update-source-type-input';\n\n@UseGuards(RolesGuard)\n@Resolver()\nexport class SourceTypeResolver {\n    constructor(private readonly service: SourceService, private readonly log: LogService) {}\n\n    @Query( () => [SourceType], {nullable: true})\n    types () {\n        this.log.logMethod(`Resolver.types()`)\n        return this.service.findSourceTypes()\n    }\n\n    @Query( () => SourceType, {nullable: true})\n    type (@Args('id') id: number) {\n        this.log.logMethod(`Resolver.type()`)\n        return this.service.findSourceType(id)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => SourceType, {nullable: true})\n    async createType (\n        @CtxUser() user: User,\n        @Args('input') input: CreateSourceTypeInput) {\n        this.log.logMethod(`Resolver.createType()`)\n        return await this.service.createSourceType(input)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => SourceType, {nullable: true})\n    updateType (\n        @CtxUser() user: User,        \n        @Args('id') id: number,\n        @Args('input') input: UpdateSourceTypeInput) {\n        this.log.logMethod(`Resolver.updateType()`)\n        return this.service.updateSourceType(id, input)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => Boolean, {nullable: true})\n    deleteType (\n        @CtxUser() user: User,        \n        @Args('id') id: number) {\n        this.log.logMethod(`Resolver.deleteType()`)\n        return this.service.deleteSourceType(id)\n    }\n}","\nimport { Args, Query, Resolver, Mutation,  } from '@nestjs/graphql';\nimport { Logger, UseGuards } from '@nestjs/common'\nimport { CtxUser, GqlAuthGuard, Public, Roles, RolesGuard, User } from '@jbhive/auth_be'\nimport { Role } from \"@jbhive/types_be\";\nimport { LogService } from 'libs/utils/log/backend/src';\nimport { SourceService } from '../source.service';\nimport { Source } from '../models/source';\nimport { CreateSourceInput } from '../dto/create-source-input';\nimport { CreateTagInput } from '../dto/create-tag-input';\nimport { Tag } from '../models/tag';\nimport { UpdateSourceInput } from '../dto/update-source-input';\n\n@UseGuards(RolesGuard)\n@Resolver()\nexport class SourceResolver {\n    constructor(private readonly service: SourceService, private readonly log: LogService) {}\n\n    @Roles(Role.Admin, Role.Astek)\n    @Query( () => [Source], {nullable: true})\n    sources () {\n        return this.service.findSources()\n    }\n\n    @Query( () => [Source], {nullable: true})\n    sourcesOwned (@CtxUser() user: User) {\n        return this.service.findSourcesWhereOwnerId(user.id)\n    }\n\n    @Query( () => [Source], {nullable: true})\n    sourcesPublicOrOwned (@CtxUser() user: User) {\n        return this.service.findSourcesWherePublicOrOwnerId(user.id)\n    }\n\n    @Public()\n    @Query( () => [Source], {nullable: true})\n    sourcesPublic () {\n        return this.service.findSourcesPublic()\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Query( () => Source, {nullable: true})\n    source (@Args('id') id: number) {\n        return this.service.findSource(id)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Query( () => Source, {nullable: true})\n    sourceOwned (@CtxUser() user: User, @Args('id') id: number) {\n        return this.service.findSourceWhereOwnerId(user.id, id)\n    }\n\n    @Mutation( () => Source, {nullable: true})\n    async createSource(\n        @CtxUser() user: User,\n        @Args('typeId') typeId: number,\n        @Args({ name: 'tagIds', type: () => [Number] }) tagIds: number[],\n        @Args('input') input: CreateSourceInput)  {\n        this.log.logMethod(`Resolver.createSource(${JSON.stringify(input)})`)\n        return this.service.createSource(user.id, typeId, tagIds, input)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => Source, {nullable: true})\n    async updateSource(\n        @CtxUser() user: User,\n        @Args('id') id: number,\n        @Args('input') input: UpdateSourceInput)  {\n            this.log.logMethod(`Resolver.updateSource(${JSON.stringify(input)})`)\n            return this.service.updateSource(user.id, id, input)\n    }\n\n    @Mutation( () => Source, {nullable: true})\n    async updateSourceOwned(\n        @CtxUser() user: User,\n        @Args('id') id: number,\n        @Args('input') input: UpdateSourceInput)  {\n            this.log.logMethod(`Resolver.updateSourceOwned(${JSON.stringify(input)})`)\n            return this.service.updateSourceOwned(user.id, id, input)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => Boolean, {nullable: true})\n    async deleteSource(\n        @CtxUser() user: User,\n        @Args('id') id: number)  {\n            this.log.logMethod(`Resolver.deleteSource(${id})`)\n            return await this.service.deleteSource(user.id, id)\n    }\n\n    @Mutation( () => Boolean, {nullable: true})\n    async deleteSourceOwned(\n        @CtxUser() user: User,\n        @Args('id') id: number)  {\n            this.log.logMethod(`Resolver.deleteSource(${id})`)\n            return await this.service.deleteSourceOwned(user.id, id)\n    }\n\n    @Roles(Role.Admin)\n    @Mutation( () => Boolean, {nullable: true})\n    async deleteSources(\n        @CtxUser() user: User)  {\n            this.log.logMethod(`Resolver.deleteSources()`)\n            return await this.service.deleteSources(user.id)\n    }\n}","import { Args, Query, Resolver, Mutation } from '@nestjs/graphql';\n\nimport { Logger, UseGuards } from '@nestjs/common'\nimport { CtxUser, GqlAuthGuard, Public, Roles, RolesGuard } from '@jbhive/auth_be';\nimport { User } from '@prisma/client';\n// import { Role } from '@jbhive/auth_be';\nimport { Role } from \"@jbhive/types_be\";\nimport { LogService } from 'libs/utils/log/backend/src';\nimport { CreateTagInput } from '../dto/create-tag-input';\nimport { Tag } from '../models/tag';\nimport { SourceService } from '../source.service';\nimport { UpdateTagInput } from '../dto/update-tag-input';\n\n@UseGuards(RolesGuard)\n@Resolver()\nexport class TagResolver {\n    constructor(private readonly service: SourceService, private readonly log: LogService) {}\n\n    \n    @Query( () => [Tag], {nullable: true})\n    tags () {\n        return this.service.findTags()\n    }\n    \n    @Query( () => Tag, {nullable: true})\n    tag (@Args('id') id: number) {\n        return this.service.findTag(id)\n    }\n\n    @Roles(Role.Admin, Role.Astek, Role.Lord, Role.Buddy)\n    @Mutation( () => Tag, {nullable: true})\n    async createTag(\n        @CtxUser() user: User,\n        @Args('input') input: CreateTagInput\n    ) {\n        return await this.service.createTag(user.id, input)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => Tag, {nullable: true})\n    updateTag(\n        @CtxUser() user: User,\n        @Args('id') id: number, \n        @Args('input') input: UpdateTagInput\n    ) {\n        return this.service.updateTag(user.id, id, input)\n    }\n\n    @Mutation( () => Tag, {nullable: true})\n    updateTagOwned(\n        @CtxUser() user: User,\n        @Args('id') id: number, \n        @Args('input') input: UpdateTagInput\n    ) {\n        return this.service.updateTagOwned(user.id, id, input)\n    }\n\n    @Roles(Role.Admin, Role.Astek)\n    @Mutation( () => Boolean, {nullable: true})\n    deleteTag(\n        @CtxUser() user: User,\n        @Args('id') id: number\n    ) {\n        return this.service.deleteTag(user.id, id)\n    }\n}","import { Injectable } from \"@nestjs/common\"\n\n@Injectable()\nexport class SourcePrismaIncludes {\n\n    static readonly userIncludes = {\n        role: true\n    }\n\n    static readonly sourceIncludes = {\n        owner: {\n            select: {\n                id: true,\n                pseudo: true,\n                email: true,\n                role: true\n            }\n        },\n        type: true,\n        tags: { \n            include: { \n                tag: true\n            } \n        },\n    }\n\n    static readonly tagIncludes = {\n        author: {            \n            select: {\n                id: true,\n                pseudo: true,\n                email: true,\n                role: true\n            }\n        }\n    }\n}","import { UserModule } from '@jbhive/user_be';\nimport { LogModule } from '@jbhive/log_be';\nimport { Module } from '@nestjs/common'\nimport { SourceTypeResolver } from './resolvers/source-type.resolver';\nimport { SourceResolver  } from './resolvers/source.resolver';\nimport { TagResolver } from './resolvers/tag.resolver';\nimport { SourceService } from './source.service';\n\n@Module({\n  imports: [UserModule, LogModule],\n  controllers: [],\n  providers: [SourceService, TagResolver, SourceTypeResolver, SourceResolver],\n  exports: [],\n})\nexport class SourceModule {}\n","import { User } from \"@jbhive/auth_be\";\nimport { UserService } from \"@jbhive/user_be\";\nimport { LogService } from \"@jbhive/log_be\";\nimport { BadRequestException, ForbiddenException, Injectable, Logger, NotFoundException, OnModuleDestroy, OnModuleInit } from \"@nestjs/common\";\nimport { ForbiddenError } from \"apollo-server-express\";\nimport { CreateSourceInput } from \"./dto/create-source-input\";\nimport { CreateSourceTypeInput } from \"./dto/create-source-type-input\";\nimport { CreateTagInput } from \"./dto/create-tag-input\";\nimport { UpdateSourceInput } from \"./dto/update-source-input\";\nimport { UpdateSourceTypeInput } from \"./dto/update-source-type-input\";\nimport { UpdateTagInput } from \"./dto/update-tag-input\";\n\nimport { ConfigService } from \"@nestjs/config\";\nimport { Prisma, PrismaClient, Tag } from \"@prisma/client\";\nimport { SourcePrismaIncludes } from \"./source-prisma-includes\";\nimport { roles_dataset, users_dataset, tags_dataset, types_dataset, Role } from \"@jbhive/types_be\";\n\n@Injectable()\nexport class SourceService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n\n    groupby_desc = 'desc'\n\n    constructor(private readonly data: UserService, private readonly log: LogService) {\n        super()\n    }\n\n    async onModuleInit() {\n        await this.$connect()\n        this.ensureDbIsInitialized()\n    }\n\n    async ensureDbIsInitialized() {\n        Logger.log(`Check if DB need to load a default dataset..`)\n        await this.data.ensureRolesExist()\n        await this.data.ensureAdminUserExists()\n        await this.ensureTagsExist()\n        await this.ensureTypesExist()\n\n    }\n\n    async onModuleDestroy() {\n        await this.$disconnect()\n    }\n\n    async findSource(id: number) {\n        const source = await this.source.findUnique({\n            where: {\n                id\n            },\n            include: SourcePrismaIncludes.sourceIncludes\n        })\n\n        if (!source) {\n            throw new NotFoundException(`Source ${id} not found`)\n        }\n\n        // Map the tags\n        const result = { ...source, tags: source.tags.map(tag => tag.tag) }\n        return result\n    }\n\n    async findSources() {\n        const allSources = await this.source.findMany({ include: SourcePrismaIncludes.sourceIncludes })\n\n        if (!allSources || allSources.length === 0) {\n            throw new NotFoundException(`No source found`)\n        }\n\n        // Map the tags\n        const result = allSources.map(source => {\n            return { ...source, tags: source.tags.map(tag => tag.tag) }\n        })\n        return result\n    }\n\n    async findSourcesWhereOwnerId(userId: number) {\n        const allSources = await this.source.findMany({\n            where: {\n                ownerId: userId\n            },\n            include: SourcePrismaIncludes.sourceIncludes\n        })\n\n        if (!allSources || allSources.length === 0) {\n            throw new NotFoundException(`No source found`)\n        }\n\n        const result = allSources.map(source => {\n            return { ...source, tags: source.tags.map(tag => tag.tag) }\n        })\n        return result\n    }\n\n    async findSourcesWherePublicOrOwnerId(userId: number) {\n        const allSources = await this.source.findMany({\n            where: {\n                OR:[\n                    {ownerId: userId},\n                    {public: true}\n                ]                               \n            },\n            orderBy: {createdAt: 'desc'},\n            include: SourcePrismaIncludes.sourceIncludes\n        })\n        \n        if (!allSources || allSources.length === 0) {\n            throw new NotFoundException(`No source found`)\n        }\n\n        const result = allSources.map(source => {\n            return { ...source, tags: source.tags.map(tag => tag.tag) }\n        })\n        return result\n    }\n\n    async findSourceWhereOwnerId(userId: number, sourceId: number) {\n        const allSources = await this.source.findMany({\n            where: {\n                id: sourceId,\n                ownerId: userId\n            },\n            orderBy: {createdAt: 'desc'},\n            include: SourcePrismaIncludes.sourceIncludes\n        })\n\n        if (!allSources || allSources.length === 0) {\n            throw new NotFoundException(`No source found`)\n        }\n\n        const result = allSources.map(source => {\n            return { ...source, tags: source.tags.map(tag => tag.tag) }\n        })\n        return result\n    }\n\n    async findSourcesPublic() {\n        const allSources = await this.source.findMany({\n            where: {\n                public: true\n            },\n            orderBy: {createdAt: 'desc'},\n            include: SourcePrismaIncludes.sourceIncludes\n        })\n\n        if (!allSources || allSources.length === 0) {\n            throw new NotFoundException(`No source found`)\n        }\n\n        const result = allSources.map(source => {\n            return { ...source, tags: source.tags.map(tag => tag.tag) }\n        })\n        return result\n    }\n\n\n    async createSource(userId: number, typeId: number, tagsIds: number[], input: CreateSourceInput) {\n        const userFound = await this.data.findUserById(userId)\n        if (!userFound) {\n            // this.log.err(`user ${userId} not found, can\"t create the source: ${JSON.stringify(input)}`)\n            throw new NotFoundException(`user ${userId} not found, can\"t create the source: ${JSON.stringify(input)}`);\n        }\n\n        if (!this.notEmptyAndWithMinimumSize(input.title, 2)){\n            throw new BadRequestException(`Can't create source, title must be set and 2 characters longs at least`)\n        }\n\n        const created = await this.source.create({\n            data: {\n                ...input,\n                createdAt: new Date(),\n                type: { connect: { id: typeId } },\n                owner: { connect: { id: userId } }\n            }\n        })\n\n        await this.manageReccordAssignementForSourceTag(created.id, tagsIds)\n        return await this.findSource(created.id)\n    }\n\n    async updateSource(userId: number, sourceId: number, input: UpdateSourceInput) {\n        const typeId = input?.typeId\n        delete input.typeId\n        const tagIds = input?.tagIds\n        delete input.tagIds\n\n        let data\n        if (typeId) {\n            data = {\n                ...input,\n                type: { connect: { id: typeId } }\n            }\n        } else {\n            data = { ...input }\n        }\n\n        const updatedSource = await this.source.update({\n            where: { id: sourceId },\n            data: data,\n        })\n\n        if (tagIds) {\n            await this.manageReccordAssignementForSourceTag(sourceId, tagIds)\n        }\n\n        const updateCompletedSource = await this.findSource(updatedSource.id)\n        return updateCompletedSource\n    }\n\n    async updateSourceOwned(userId: number, sourceId: number, input: UpdateSourceInput) {\n        const found = await this.findSource(sourceId)\n        if (!found) {\n            throw new NotFoundException(`Can't performe update operation, source ${sourceId} not found`)\n        }\n\n        if (found.ownerId !== userId) {\n            throw new ForbiddenError(`User ${userId} is not allowed to update source ${sourceId}`)\n        }\n\n        return await this.updateSource(userId, sourceId, input)\n    }\n\n    async deleteSource(userId: number, sourceId: number) {\n        const deleted = await this.source.delete({\n            where: {\n                id: sourceId\n            }\n        })\n\n        return !!deleted\n    }\n\n    async deleteSourceOwned(userId: number, sourceId: number) {\n        const found = await this.findSource(sourceId)\n        if (!found) {\n            throw new NotFoundException(`Can't performe delete operation, source ${sourceId} not found`)\n        }\n\n        if (found.ownerId !== userId) {\n            throw new ForbiddenError(`User ${userId} is not allowed to delte source ${sourceId}`)\n        }\n\n        const deleted = await this.deleteSource(userId, sourceId)\n    }\n\n    async deleteSources(userId: number) {\n        const deleted = await this.source.deleteMany({})\n        return deleted.count > 0\n    }\n\n\n\n    findTagById(tagId: number) {\n        return this.tag.findUnique({\n            where: {\n                id: tagId\n            }\n        })\n    }\n\n    findTagByTitle(title: string) {\n        return this.tag.findUnique({\n            where: {\n                title: title\n            }\n        })\n    }\n\n    findTag(id: number) {\n        return this.tag.findUnique({\n            where: {\n                id\n            },\n            include: SourcePrismaIncludes.tagIncludes\n        })\n    }\n\n    findTags() {\n        return this.tag.findMany({ include: SourcePrismaIncludes.tagIncludes })\n    }\n\n    findTagByIds(tags: number[]) {\n        return this.tag.findMany({\n            where: {\n                id: { in: tags }\n            }\n        })\n    }\n\n    async createTag(userId: number, input: CreateTagInput) {\n\n        if (!this.notEmptyAndWithMinimumSize(input.title, 3)){\n            throw new BadRequestException(`Can't create tag, title must be set and 3 characters longs at least`)\n        }\n\n        if (!this.notEmptyAndWithMinimumSize(input.description, 6)){\n            throw new BadRequestException(`Can't create tag, description must be set and 6 characters longs at least`)\n        }\n\n        const userFound = await this.data.findUserById(userId)\n        if (!userFound) {\n            // this.log.err(`user ${userId} not found, can\"t create the tag: ${JSON.stringify(input)}`)\n            throw new NotFoundException(`User ${userId} not found, can\"t create the tag: ${JSON.stringify(input)}`);\n        }\n\n        const tagFound = await this.findTagByTitle(input.title)\n        if (tagFound) {\n            // this.log.err(`user ${userId} not found, can\"t create the tag: ${JSON.stringify(input)}`)\n            throw new ForbiddenException(`Tag ${input.title} already exists}`);\n        }\n\n        const created = await this.tag.create({\n            data: {\n                ...input,\n                author: { connect: { id: userId } }\n            }\n        })\n\n        const createTagFound = await this.findTag(created.id)\n        return createTagFound\n    }\n\n    async updateTag(userId: number, id: number, input: UpdateTagInput) {\n        return await this.tag.update({\n            where: { id: id },\n            data: { ...input }\n        })\n    }\n\n    async updateTagOwned(userId: number, id: number, input: UpdateTagInput) {\n        const found = await this.findTag(id)\n        if (!found) {\n            throw new NotFoundException(`Tag ${id} not found, can't update the tag ${id}`)\n        }\n\n        if (found.authorId !== userId) {\n            throw new ForbiddenError(`User ${userId} not allowed to update tag ${id}`)\n        }\n\n        return await this.tag.update({\n            where: { id: id },\n            data: { ...input }\n        })\n    }\n\n\n\n    async deleteTag(userId: number, id: number) {\n        const deleted = await this.tag.delete({\n            where: { id: id }\n        })\n        return !!deleted\n    }\n\n    findTypeById(id: number) {\n        return this.sourceType.findUnique({\n            where: {\n                id: id\n            }\n        })\n    }\n\n    findSourceType(id: number) {\n        return this.sourceType.findUnique({\n            where: {\n                id\n            }\n        })\n    }\n\n    findSourceTypes() {\n        return this.sourceType.findMany()\n    }\n\n    async createSourceType(input: CreateSourceTypeInput) {\n        if (!this.notEmptyAndWithMinimumSize(input.title, 2)){\n            throw new BadRequestException(`Can't create source type, title must be set and 2 characters longs at least`)\n        }\n\n        if (!this.notEmptyAndWithMinimumSize(input.description, 6)){\n            throw new BadRequestException(`Can't create source type, description must be set and 6 characters longs at least`)\n        }\n\n        return await this.sourceType.create({\n            data: {\n                ...input\n            }\n        })\n    }\n\n    updateSourceType(id: number, input: UpdateSourceTypeInput) {\n        return this.sourceType.update({\n            where: { id: id },\n            data: { ...input }\n        })\n    }\n\n    async deleteSourceType(id: number) {\n        const deleted = await this.sourceType.delete({\n            where: { id: id }\n        })\n        return !!deleted\n    }\n\n\n\n    async manageReccordAssignementForSourceTag(sourceId: number, tags: number[]) {\n\n        const source = await this.findSource(sourceId)\n        await this.removeOldReccordsForSourceTag(source, sourceId, tags)\n        await this.addNewReccordsForSourceTag(source, sourceId, tags)\n        return true\n    }\n\n    async addNewReccordsForSourceTag(source: { tags: Tag[]; id: number; createdAt: Date; title: string; url: string; content: string; description: string; typeId: number; ownerId: number; owner: { id: number; pseudo: string; email: string; role: import(\".prisma/client\").Role; }; type: import(\".prisma/client\").SourceType; }, sourceId: number, tags: number[]) {\n        // // News\n        let assignements = []\n        for (var tagId of tags) {\n            let found: Boolean = false\n            for (var tag of source.tags) {\n                if (tagId === tag.id) {\n                    found = true\n                    break\n                }\n            }\n            if (!found) {\n                assignements = [\n                    ...assignements,\n                    {\n                        sourceId: sourceId,\n                        tagId: tagId\n                    }\n                ]\n            }\n        }\n        const relationsCreated = await this.sourceTag.createMany({\n            data: assignements\n        })\n\n        return relationsCreated\n\n    }\n\n    async removeOldReccordsForSourceTag(source: { tags: Tag[]; id: number; createdAt: Date; title: string; url: string; content: string; description: string; typeId: number; ownerId: number; owner: { id: number; pseudo: string; email: string; role: import(\".prisma/client\").Role; }; type: import(\".prisma/client\").SourceType; }, sourceId: number, tags: number[]) {\n        // Olds\n        // let assignements = []\n        let ids: number[] = []\n        for (var tag of source.tags) {\n            let found: Boolean = false\n            for (var tagId of tags) {\n                if (tagId === tag.id) {\n                    found = true;\n                    break\n                }\n            }\n            if (!found) {\n                ids.push(tag.id)\n            }\n        }\n\n        for (var id of ids) {\n            await this.sourceTag.delete({\n                where: {\n                    sourceId_tagId: {\n                        sourceId: sourceId,\n                        tagId: id\n                    }\n\n                }\n            })\n        }\n    }\n\n\n    /*********************************\n     *  UTILS\n     * \n     *********************************/\n    //  private async ensureRolesExist() {\n    //     const found = await this.findRoleById(0)\n    //     if (found) {\n    //         return true\n    //     }\n    //     Logger.debug(`Initialize Roles..`)\n    //     // create roles\n    //     for (var role of roles_dataset) {\n    //         await this.createRole({ id: role.id, name: role.name, description: role.description })\n    //     }\n    // }\n\n    // private async ensureAdminUserExists() {\n    //     const found = await this.data.findUserByEmail(this.default_admin.email)\n    //     if (found) {\n    //         return true\n    //     }\n    //     Logger.debug(`Initialize Admin user AIGHT..`)\n    //     const created = await this.data.createActivatedUser(this.default_admin)\n        \n    //     for (var user of users_dataset) {\n    //         Logger.debug(`Initialize Admin user..`)\n    //         await this.data.createActivatedUser({ email: user.email, nickname: user.nickname, pseudo: user.pseudo, password: this.default_admin.password, roleId: user.roleId })\n    //     }\n\n    // }\n\n    private async ensureTagsExist() {\n        const found = await this.findTagById(1)\n        if (found) {\n            return true\n        }\n        // create roles\n        Logger.debug(`Initialize Tags..`)\n        for (var tag of tags_dataset) {\n            await this.createTag(1, { title: tag.title, description: tag.description })\n        }\n    }\n\n    private async ensureTypesExist() {\n        const found = await this.findTypeById(1)\n        if (found) {\n            return true\n        }\n        Logger.debug(`Initialize Types..`)\n        // create roles\n        for (var type of types_dataset) {\n            await this.createSourceType({ title: type.title, description: type.description })\n        }\n    }\n\n\n    private notEmptyAndWithMinimumSize(value: string, minimalSize: number) {\n        if (value === null || value.trim().length === 0 || value.length < minimalSize){\n            return false\n        } else {\n            return true\n        }\n    }\n\n}","export * from './lib/user.module'\nexport * from './lib/user.service'\n\n","import { Module } from '@nestjs/common'\nimport { UserService } from './user.service';\nimport { StructModule } from '@jbhive/types_be';\n\n\n@Module({\n  imports: [StructModule],\n  controllers: [],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}","import { Injectable, OnModuleInit, OnModuleDestroy, Logger, NotFoundException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { Prisma, PrismaClient, Tag } from \"@prisma/client\";\n// import { JwtDto } from \"libs/auth/src/lib/dto/jwt.dto\";\n// import { CreateSourceInput, UpdateSourceInput, CreateSourceTypeInput, UpdateSourceTypeInput, CreateTagInput, UpdateTagInput } from \"@jbhive_be/source\"\n\nimport { LogService } from \"libs/utils/log/backend/src\";\nimport { ForbiddenError } from \"apollo-server-express\";\nimport { AdminUpdateUserInput, UpdateUserInput, roles_dataset, users_dataset, PrismaIncludes, CreatedRoleDto, CreatedUserDto } from \"@jbhive/types_be\";\nimport { CryptHelper } from \"@jbhive/crypt\";\n\n\n@Injectable()\nexport class UserService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n\n    private default_admin: {\n        email: string,\n        password: string,\n        pseudo: string,\n        nickname: string,\n        roleId: number\n    }\n\n    constructor(private readonly config: ConfigService) {\n        super()\n\n        this.default_admin = {\n            email: this.config.get('admin_email'),\n            password: this.config.get('admin_password'),\n            pseudo: this.config.get('admin_pseudo'),\n            nickname: this.config.get('admin_pseudo'),\n            roleId: this.config.get('admin_role_id'),\n        }\n    }\n\n    async onModuleInit() {\n        await this.$connect()\n    }\n\n    async onModuleDestroy() {\n        await this.$disconnect()\n    }\n\n    /*********************************\n     *  USERS & ROLES\n     * \n     *********************************/\n\n    async createUser({ email, password, pseudo, roleId, nickname }: CreatedUserDto) {\n        // Comming from PrsimaClient\n        Logger.debug(`createUser`)\n        const created = await this.user.create({\n            data: {\n                email,\n                password,\n                pseudo,\n                nickname,\n                roleId: +roleId,\n                hidden: false,  // TODO admin manage hidden & activated\n                activated: true,\n                token: '',\n            }\n        })\n        return created\n    }\n\n    async createActivatedUser({ email, password, pseudo, roleId, nickname  }: CreatedUserDto) {\n        // Comming from PrsimaClient\n        Logger.debug(`createActivatedUser`)\n        const created = await this.user.create({\n            data: {\n                email,\n                password,\n                pseudo,\n                nickname,\n                role: { connect : { id: +roleId}},\n                hidden: false,  // TODO admin manage hidden & activated\n                activated: true,\n                token: '',\n            }\n        })\n        return created\n    }\n\n    \n\n    async createRole({ id, name, description }: CreatedRoleDto) { //{ id: number, name: string, description: string }) {\n        // Comming from PrismaClient\n        const created = await this.role.create({\n            data: {\n                id,\n                name,\n                description\n            }\n        })\n\n        return created\n    }\n\n    async findUser(userId: number) {\n        return await this.user.findUnique({\n            where: {\n                id: userId\n            }\n        })\n    }\n\n    async updateRoleUser(userId: number, roleId: number) {\n        // Update\n        return await this.user.update({\n            where: { id: userId },\n            data: { roleId }\n        })\n    }\n\n    // async loadAllDesactivatedUsersWithLessPrivilege(userRoleId: number) {\n    //     return await this.user.findMany({\n    //         where: {\n    //             activated: true,\n    //             // hidden: false,\n    //             // roleId: {\n    //             //     lt: userRoleId\n    //             // }\n    //         }\n    //     })\n    // }\n\n    async loadAllUsersWithLessPrivilege(userRoleId: number) {\n        return await this.user.findMany({\n            where: {\n                hidden: false,\n                activated: true,\n                roleId: {\n                    lt: userRoleId\n                }\n            }\n        })\n    }\n\n    \n\n    async updateAdminUser(userId: number, input: AdminUpdateUserInput) {\n\n        let data = { ...input }\n\n        return await this.user.update({\n            where: { id: userId },\n            data: data\n        })\n    }\n\n    async updateUser(userId: number, input: UpdateUserInput) {\n        console.log('userservice.updateUser: ', input)\n\n        let data = { ...input }\n        if (input?.password) {\n            data = {\n                ...data,\n                password: await CryptHelper.hash(input.password)\n            }\n        }\n\n        return await this.user.update({\n            where: { id: userId },\n            data: data\n        })\n    }\n\n    async deleteUser(id: number) {\n        const deleted = await this.user.delete({\n            where: {\n                id\n            }\n        })\n\n        return !!deleted\n    }\n\n\n\n    findUserByEmail(email: string) {\n        return this.user.findUnique({\n            where: { email },\n            include: PrismaIncludes.userIncludes\n        })\n    }\n\n    findUserById(userId: number) {\n        return this.user.findUnique({\n            where: {\n                id: userId\n            },\n            include: PrismaIncludes.userIncludes\n        })\n    }\n\n    findUserByNickname(nickname: string) {\n        return this.user.findUnique({\n            where: { nickname },\n            include: PrismaIncludes.userIncludes\n        })\n    }\n\n    findUserByPseudo(pseudo: string) {\n        return this.user.findUnique({\n            where: { pseudo },\n            include: PrismaIncludes.userIncludes\n        })\n    }\n\n    findRoleById(roleId: number) {\n        return this.role.findUnique({\n            where: {\n                id: roleId\n            }\n        })\n    }\n\n\n    // /*********************************\n    //  *  UTILS\n    //  * \n    //  *********************************/\n    async ensureRolesExist() {\n        const found = await this.findRoleById(0)\n        if (found) {\n            return true\n        }\n        Logger.debug(`Initialize Roles..`)\n        // create roles\n        for (var role of roles_dataset) {\n            await this.createRole({ id: role.id, name: role.name, description: role.description })\n        }\n    }\n\n    async ensureAdminUserExists() {\n        const found = await this.findUserByEmail(this.default_admin.email)\n        if (found) {\n            return true\n        }\n        Logger.debug(`Initialize Admin user`)\n        const created = await this.createActivatedUser(this.default_admin)\n        \n        for (var user of users_dataset) {\n            Logger.debug(`Initialize ${user.pseudo} user`)\n            await this.createActivatedUser({ email: user.email, nickname: user.nickname, pseudo: user.pseudo, password: this.default_admin.password, roleId: user.roleId })\n        }\n\n    }\n\n    // private async ensureTagsExist() {\n    //     const found = await this.findTagById(1)\n    //     if (found) {\n    //         return true\n    //     }\n    //     // create roles\n    //     Logger.debug(`Initialize Tags..`)\n    //     for (var tag of tags_dataset) {\n    //         await this.createTag(1, { title: tag.title, description: tag.description })\n    //     }\n    // }\n\n    // private async ensureTypesExist() {\n    //     const found = await this.findTypeById(1)\n    //     if (found) {\n    //         return true\n    //     }\n    //     Logger.debug(`Initialize Types..`)\n    //     // create roles\n    //     for (var type of types_dataset) {\n    //         await this.createSourceType({ title: type.title, description: type.description })\n    //     }\n    // }\n}","export * from './lib/core.module'\n","export const configuration = () => ({\n  environment: process.env.NODE_ENV || 'production',\n  port: parseInt(process.env.PORT || '3000', 10),\n  admin_email: process.env.ADMIN_EMAIL,\n  admin_pseudo: process.env.ADMIN_PSEUDO,\n  admin_password: process.env.ADMIN_PASSWORD,\n  admin_role_id: parseInt(process.env.ADMIN_ROLE_ID),\n  debug: process.env.DEBUG,\n  debug_guards: process.env.DEBUG_GUARDS,\n  jwt_expire: parseInt(process.env.JWT_EXPIRE),\n  jwt_secret: process.env.JWT_SECRET,\n});\n","import * as Joi from \"joi\";\n\nexport const validationSchema = Joi.object({\n    NODE_ENV: Joi.string().valid(\"development\", \"production\", \"test\").required(),\n    PORT: Joi.number().default(3000),\n    ADMIN_EMAIL: Joi.string().email().required(),\n    ADMIN_PSEUDO: Joi.string().required(),\n    ADMIN_PASSWORD: Joi.string().required(),\n    ADMIN_ROLE_ID: Joi.number().required(),\n    DEBUG: Joi.string().valid(\"true\", \"false\").required(),\n    DEBUG_GUARDS: Joi.string().valid(\"true\", \"false\").required(),\n    JWT_EXPIRE: Joi.number(),\n    JWT_SECRET: Joi.string().required(),\n});\n","import { Module } from '@nestjs/common'\nimport { ConfigModule } from \"@nestjs/config\";\nimport { configuration } from \"./config/configuration\";\nimport { validationSchema } from \"./config/validation\";\nimport { GraphQLModule } from \"@nestjs/graphql\";\nimport { CoreResolver } from './core.resolver';\nimport { ApolloDriverConfig, ApolloDriver } from '@nestjs/apollo';\nimport { LogModule } from 'libs/utils/log/backend/src';\n\n\n@Module({\n  imports: [\n    LogModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n      validationSchema,\n    }),\n    GraphQLModule.forRoot<ApolloDriverConfig>({\n      driver: ApolloDriver,\n      autoSchemaFile: true,\n      playground: true,\n    }),\n    \n  ],\n  controllers: [],\n  providers: [CoreResolver],\n  exports: [],\n})\nexport class CoreModule {}\n","import { Float, Query, Resolver } from \"@nestjs/graphql\";\nimport { Color, LogService } from 'libs/utils/log/backend/src';\n\n@Resolver()\nexport class CoreResolver {\n\n    // constructor(private readonly log: LogService) {}\n\n    @Query(() => Float)\n    uptime() {\n        return process.uptime();\n    }\n}\n","export * from './lib/log.module'\nexport * from './lib/log.service'\nexport * from './lib/enums/colors.enum'\n","export enum Color {\n    Reset = \"\\x1b[0m\",\n\n    FgBlack = \"\\x1b[30m\",\n    FgRed = \"\\x1b[31m\",\n    FgGreen = \"\\x1b[32m\",\n    FgYellow = \"\\x1b[33m\",\n    FgBlue = \"\\x1b[34m\",\n    FgMagenta = \"\\x1b[35m\",\n    FgCyan = \"\\x1b[36m\",\n    FgWhite = \"\\x1b[37m\",\n\n    BgBlack = \"\\x1b[40m\",\n    BgRed = \"\\x1b[41m\",\n    BgGreen = \"\\x1b[42m\",\n    BgYellow = \"\\x1b[43m\",\n    BgBlue = \"\\x1b[44m\",\n    BgMagenta = \"\\x1b[45m\",\n    BgCyan = \"\\x1b[46m\",\n    BgWhite = \"\\x1b[47m\",\n\n    Bright = \"\\x1b[1m\",\n    Dim = \"\\x1b[2m\",\n    Underscore = \"\\x1b[4m\",\n    Blink = \"\\x1b[5m\",\n    Reverse = \"\\x1b[7m\",\n    Hidden = \"\\x1b[8m\",\n}","import { Module } from '@nestjs/common'\nimport { LogService } from './log.service';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [LogService],\n  exports: [LogService],\n})\nexport class LogModule {}\n","import { Injectable, Logger } from \"@nestjs/common\";\nimport { Color } from \"./enums/colors.enum\";\nimport { ConfigService } from \"@nestjs/config\";\n\n\n@Injectable()\nexport class LogService {\n\n    debug: boolean\n    debugGuards: boolean\n\n    constructor(private readonly config: ConfigService) {\n        this.debug = this.config.get('debug') === \"true\"\n        this.debugGuards = this.config.get('debug_guards') === \"true\"\n    }\n\n    public log(msg: any) {\n        if (this.debug) {\n            Logger.log(msg);\n        }\n    }\n\n    public warn(msg: any) {\n        if (this.debug) {\n            Logger.warn(msg);\n        }\n    }\n\n    public err(msg: any) {\n        if (this.debug) {\n            Logger.error(msg);\n        }\n    }\n\n    public logMethod(msg: any) {\n        if (this.debug) {\n            Logger.log(`> ${msg}`);\n        }\n    }\n\n    public logTitle(msg: string) {\n        if (this.debug) {\n            Logger.log(\"\");\n            Logger.log(`# ${msg}`);\n        }\n    }\n\n    public logDefault(msg: string) {\n        Logger.log(msg)\n    }\n\n    public logc(msg: any, color: Color) {\n        if (this.debug) {\n            Logger.log(color + msg + Color.Reset);\n        }\n    }\n\n    public warnc(msg: any, color: Color) {\n        if (this.debug) {\n            Logger.warn(color + msg + Color.Reset);\n        }\n    }\n\n    public errc(msg: any, color: Color) {\n        if (this.debug) {\n            Logger.error(color + msg + Color.Reset);\n        }\n    }\n\n    public logcMethod(msg: any, color: Color) {\n        if (this.debug) {\n            Logger.log(`> ${color} ${msg} ${Color.Reset}`);\n        }\n    }\n\n    public logcTitle(msg: string, color: Color) {\n        if (this.debug) {\n            Logger.log(\"\");\n            Logger.log(`# ${color} ${msg} ${Color.Reset}`);\n        }\n    }\n\n\n    public logGuardMethod(name: string, method: string) {\n        if (this.debugGuards){\n            Logger.log(\"\");\n            Logger.log(`${Color.FgCyan}> Guard catched call for ${name}.${method}() ${Color.Reset} `);\n        }\n    }\n\n    public logGuard(guardName: string, msg: string) {\n        if (this.debugGuards){\n            Logger.log(`[${guardName}]:${Color.FgCyan} ${msg} ${Color.Reset} `);\n        }\n    }\n}","export * from './lib/struct.module'\nexport * from './lib/enums/role.enum'\nexport * from './lib/data-set/my-sources-init.dataset'\nexport * from './lib/dto/update-user-inupt'\nexport * from './lib/dto/admin-update-user-inupt'\nexport * from './lib/prisma/prisma-includes'\nexport * from './lib/dto/created-role'\nexport * from './lib/dto/create-user-dto'","import { Role } from \"../enums/role.enum\"\n\nexport const roles_dataset = [\n    { id: Role.User, name: 'user', description: 'Un mec connecté' },\n    { id: Role.Buddy, name: 'buddy', description: 'My buddy' },\n    { id: Role.Lord, name: 'lord', description: 'Lui c\\'est le sang' },\n    { id: Role.Admin, name: 'admin', description: 'Monsieur, mes homages..' },\n    { id: Role.Astek, name: 'astek', description: 'Le dev en personne' }\n] \n\nexport const tags_dataset = [\n    { title: '1er', description: 'Premières et autres fois' },\n    { title: 'science', description: 'C\\'est scientifique!' },\n    { title: 'skate', description: 'Obligé pour loic' },\n    { title: 'eminem', description: 'Encore obligé pour loic' },\n    { title: 'histoire', description: 'C\\'est historique!' },\n    { title: 'dev', description: 'Vive le code!' },\n]\n\nexport const types_dataset = [\n    { title: 'web', description: 'Basiquement, un site web' },\n    { title: 'book', description: 'Vue sur du papier' },\n    { title: 'other', description: 'Type de source non repertorié' },\n] \n\nexport const users_dataset = [\n    { email: 'bj@gmail.com', nickname: 'astek', pseudo: 'astek', roleId: Role.Astek },\n    { email: 'bu@gmail.com', nickname: 'buddy', pseudo: 'buddy', roleId: Role.Buddy },\n    { email: 'lo@gmail.com', nickname: 'lord', pseudo: 'lord', roleId: Role.Lord },\n    { email: 'us@gmail.com', nickname: 'user', pseudo: 'user', roleId: Role.User },\n] \n\nexport const sources_dataset = [\n    { title: 'bj@gmail.com', public: 'astek', url: 'astek', content: 'content', description: 'description', type: 0,  ownerId: 0, typeId: 0, \n        tags: [0, 1],},\n] \n\n\n","import { Field, InputType } from \"@nestjs/graphql\";\n\n\n@InputType()\nexport class AdminUpdateUserInput {\n    @Field({nullable: true})\n    activated?: boolean\n\n    @Field({nullable: true})\n    hidden?: boolean\n\n}","import { ApiProperty } from '@nestjs/swagger';\nimport { Field, InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class CreatedUserDto {\n\n    @Field({nullable: false})\n    email?: string\n\n    @Field({nullable: false})\n    password?: string\n\n    @Field({nullable: false})\n    pseudo?: string\n\n    @Field({nullable: false})\n    roleId?: number\n\n    @Field({nullable: false})\n    nickname?: string\n\n}","import { ApiProperty } from '@nestjs/swagger';\nimport { Field, InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class CreatedRoleDto {\n    @Field({nullable: false})\n    id?: number\n\n    @Field({nullable: false})\n    name?: string\n\n    @Field({nullable: false})\n    description?: string\n\n}","import { ApiProperty } from '@nestjs/swagger';\nimport { Field, InputType } from \"@nestjs/graphql\";\n\n\n@InputType()\nexport class UpdateUserInput {\n    @ApiProperty()\n    @Field({nullable: true})\n    email?: string\n\n    @ApiProperty()\n    @Field({nullable: true})\n    pseudo?: string\n\n    @ApiProperty()\n    @Field({nullable: true})\n    nickname?: string\n\n    @ApiProperty()\n    @Field({nullable: true})\n    password?: string\n\n}","export enum Role {\n    User = 0,\n    Buddy = 1,\n    Lord = 2,\n    Admin = 3,\n    Astek = 4\n}","import { Injectable } from \"@nestjs/common\"\n\n@Injectable()\nexport class PrismaIncludes {\n\n    static readonly userIncludes = {\n        role: true\n    }\n\n    static readonly sourceIncludes = {\n        owner: {\n            select: {\n                id: true,\n                pseudo: true,\n                email: true,\n                role: true\n            }\n        },\n        type: true,\n        tags: { \n            include: { \n                tag: true\n            } \n        },\n    }\n\n    static readonly tagIncludes = {\n        author: {            \n            select: {\n                id: true,\n                pseudo: true,\n                email: true,\n                role: true\n            }\n        }\n    }\n\n    static readonly coursesIncludes = {\n        lessons: true,\n        author: {            \n            select: {\n                id: true,\n                pseudo: true,\n                email: true,\n                role: true\n            }\n        }\n    }\n}","import { Module } from '@nestjs/common'\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class StructModule {}\n","module.exports = require(\"@nestjs/apollo\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@prisma/client\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"joi\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\nimport { ConfigService } from '@nestjs/config'\n\nimport { AppModule } from './app/app.module'\n\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n  const config = app.get(ConfigService)\n\n  const configSwagger = new DocumentBuilder()\n    .setTitle('My Sources')\n    .setDescription('The my-sources API description')\n    .setVersion('1.0')\n    .addTag('sources')\n    .build();\n  const document = SwaggerModule.createDocument(app, configSwagger);\n  SwaggerModule.setup('api', app, document);\n\n  const globalPrefix = 'api'\n  app.setGlobalPrefix(globalPrefix)\n  const port = config.get('port')\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix)\n    Logger.log('Listening at http://localhost:' + port + '/graphql')\n    Logger.log(`🚀 Running in ${config.get('environment')} mode`)\n  })\n}\nbootstrap()"],"names":[],"sourceRoot":""}