export { createAction, props, union } from './action_creator';
export { createActionGroup, emptyProps } from './action_group_creator';
export { Store, select } from './store';
export { combineReducers, compose, createReducerFactory } from './utils';
export { ActionsSubject, INIT } from './actions_subject';
export { createFeature } from './feature_creator';
export { setNgrxMockEnvironment, isNgrxMockEnvironment } from './flags';
export { ReducerManager, ReducerObservable, ReducerManagerDispatcher, UPDATE, } from './reducer_manager';
export { ScannedActionsSubject } from './scanned_actions_subject';
export { createSelector, createSelectorFactory, createFeatureSelector, defaultMemoize, defaultStateFn, resultMemoize, } from './selector';
export { State, StateObservable, reduceState } from './state';
export { INITIAL_STATE, REDUCER_FACTORY, INITIAL_REDUCERS, STORE_FEATURES, META_REDUCERS, FEATURE_REDUCERS, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, ACTIVE_RUNTIME_CHECKS, FEATURE_STATE_PROVIDER, ROOT_STORE_PROVIDER, } from './tokens';
export { StoreModule, StoreRootModule, StoreFeatureModule, } from './store_module';
export { provideStore, provideState } from './provide_store';
export { on, createReducer } from './reducer_creator';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQkEsT0FBTyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBaUIsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDeEUsT0FBTyxFQUNMLGNBQWMsRUFDZCxpQkFBaUIsRUFDakIsd0JBQXdCLEVBQ3hCLE1BQU0sR0FDUCxNQUFNLG1CQUFtQixDQUFDO0FBQzNCLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFDTCxjQUFjLEVBQ2QscUJBQXFCLEVBQ3JCLHFCQUFxQixFQUNyQixjQUFjLEVBQ2QsY0FBYyxFQUtkLGFBQWEsR0FFZCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsS0FBSyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDOUQsT0FBTyxFQUNMLGFBQWEsRUFDYixlQUFlLEVBQ2YsZ0JBQWdCLEVBQ2hCLGNBQWMsRUFDZCxhQUFhLEVBQ2IsZ0JBQWdCLEVBQ2hCLDJCQUEyQixFQUMzQixtQkFBbUIsRUFDbkIscUJBQXFCLEVBQ3JCLHNCQUFzQixFQUN0QixtQkFBbUIsR0FDcEIsTUFBTSxVQUFVLENBQUM7QUFDbEIsT0FBTyxFQUNMLFdBQVcsRUFDWCxlQUFlLEVBQ2Ysa0JBQWtCLEdBQ25CLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEIsT0FBTyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM3RCxPQUFPLEVBQWdCLEVBQUUsRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7XG4gIEFjdGlvbixcbiAgQWN0aW9uQ3JlYXRvcixcbiAgQWN0aW9uUmVkdWNlcixcbiAgQWN0aW9uUmVkdWNlck1hcCxcbiAgQWN0aW9uUmVkdWNlckZhY3RvcnksXG4gIEFjdGlvblR5cGUsXG4gIENyZWF0b3IsXG4gIE1ldGFSZWR1Y2VyLFxuICBOb3RBbGxvd2VkQ2hlY2ssXG4gIEFjdGlvbkNyZWF0b3JQcm9wcyxcbiAgU2VsZWN0b3IsXG4gIFNlbGVjdG9yV2l0aFByb3BzLFxuICBSdW50aW1lQ2hlY2tzLFxuICBGdW5jdGlvbldpdGhQYXJhbWV0ZXJzVHlwZSxcbiAgRW52aXJvbm1lbnRQcm92aWRlcnMsXG59IGZyb20gJy4vbW9kZWxzJztcbmV4cG9ydCB7IGNyZWF0ZUFjdGlvbiwgcHJvcHMsIHVuaW9uIH0gZnJvbSAnLi9hY3Rpb25fY3JlYXRvcic7XG5leHBvcnQgeyBjcmVhdGVBY3Rpb25Hcm91cCwgZW1wdHlQcm9wcyB9IGZyb20gJy4vYWN0aW9uX2dyb3VwX2NyZWF0b3InO1xuZXhwb3J0IHsgU3RvcmUsIHNlbGVjdCB9IGZyb20gJy4vc3RvcmUnO1xuZXhwb3J0IHsgY29tYmluZVJlZHVjZXJzLCBjb21wb3NlLCBjcmVhdGVSZWR1Y2VyRmFjdG9yeSB9IGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0IHsgQWN0aW9uc1N1YmplY3QsIElOSVQgfSBmcm9tICcuL2FjdGlvbnNfc3ViamVjdCc7XG5leHBvcnQgeyBjcmVhdGVGZWF0dXJlLCBGZWF0dXJlQ29uZmlnIH0gZnJvbSAnLi9mZWF0dXJlX2NyZWF0b3InO1xuZXhwb3J0IHsgc2V0TmdyeE1vY2tFbnZpcm9ubWVudCwgaXNOZ3J4TW9ja0Vudmlyb25tZW50IH0gZnJvbSAnLi9mbGFncyc7XG5leHBvcnQge1xuICBSZWR1Y2VyTWFuYWdlcixcbiAgUmVkdWNlck9ic2VydmFibGUsXG4gIFJlZHVjZXJNYW5hZ2VyRGlzcGF0Y2hlcixcbiAgVVBEQVRFLFxufSBmcm9tICcuL3JlZHVjZXJfbWFuYWdlcic7XG5leHBvcnQgeyBTY2FubmVkQWN0aW9uc1N1YmplY3QgfSBmcm9tICcuL3NjYW5uZWRfYWN0aW9uc19zdWJqZWN0JztcbmV4cG9ydCB7XG4gIGNyZWF0ZVNlbGVjdG9yLFxuICBjcmVhdGVTZWxlY3RvckZhY3RvcnksXG4gIGNyZWF0ZUZlYXR1cmVTZWxlY3RvcixcbiAgZGVmYXVsdE1lbW9pemUsXG4gIGRlZmF1bHRTdGF0ZUZuLFxuICBNZW1vaXplRm4sXG4gIE1lbW9pemVkUHJvamVjdGlvbixcbiAgTWVtb2l6ZWRTZWxlY3RvcixcbiAgTWVtb2l6ZWRTZWxlY3RvcldpdGhQcm9wcyxcbiAgcmVzdWx0TWVtb2l6ZSxcbiAgRGVmYXVsdFByb2plY3RvckZuLFxufSBmcm9tICcuL3NlbGVjdG9yJztcbmV4cG9ydCB7IFN0YXRlLCBTdGF0ZU9ic2VydmFibGUsIHJlZHVjZVN0YXRlIH0gZnJvbSAnLi9zdGF0ZSc7XG5leHBvcnQge1xuICBJTklUSUFMX1NUQVRFLFxuICBSRURVQ0VSX0ZBQ1RPUlksXG4gIElOSVRJQUxfUkVEVUNFUlMsXG4gIFNUT1JFX0ZFQVRVUkVTLFxuICBNRVRBX1JFRFVDRVJTLFxuICBGRUFUVVJFX1JFRFVDRVJTLFxuICBVU0VSX1BST1ZJREVEX01FVEFfUkVEVUNFUlMsXG4gIFVTRVJfUlVOVElNRV9DSEVDS1MsXG4gIEFDVElWRV9SVU5USU1FX0NIRUNLUyxcbiAgRkVBVFVSRV9TVEFURV9QUk9WSURFUixcbiAgUk9PVF9TVE9SRV9QUk9WSURFUixcbn0gZnJvbSAnLi90b2tlbnMnO1xuZXhwb3J0IHtcbiAgU3RvcmVNb2R1bGUsXG4gIFN0b3JlUm9vdE1vZHVsZSxcbiAgU3RvcmVGZWF0dXJlTW9kdWxlLFxufSBmcm9tICcuL3N0b3JlX21vZHVsZSc7XG5leHBvcnQgeyBSb290U3RvcmVDb25maWcsIFN0b3JlQ29uZmlnLCBGZWF0dXJlU2xpY2UgfSBmcm9tICcuL3N0b3JlX2NvbmZpZyc7XG5leHBvcnQgeyBwcm92aWRlU3RvcmUsIHByb3ZpZGVTdGF0ZSB9IGZyb20gJy4vcHJvdmlkZV9zdG9yZSc7XG5leHBvcnQgeyBSZWR1Y2VyVHlwZXMsIG9uLCBjcmVhdGVSZWR1Y2VyIH0gZnJvbSAnLi9yZWR1Y2VyX2NyZWF0b3InO1xuIl19