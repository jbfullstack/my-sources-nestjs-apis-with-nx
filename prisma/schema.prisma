// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  pseudo    String   @unique
  nickname  String?  @unique
  password  String
  role      Role    @relation(fields: [roleId], references: [id])
  roleId    Int
  Tag       Tag[]
  source    Source[]
  token     String?
  activated Boolean
  hidden    Boolean
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String
  user        User[]
}

// Sources

model Tag {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  title       String      @unique
  description String?
  author      User        @relation(fields: [authorId], references: [id])
  authorId    Int
  sources     SourceTag[]
}

model SourceType {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  sources     Source[]
}

model Source {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  title       String
  public      Boolean     @default(true)
  url         String?
  content     String?
  description String?
  type        SourceType  @relation(fields: [typeId], references: [id])
  tags        SourceTag[]
  owner       User        @relation(fields: [ownerId], references: [id])
  typeId      Int
  ownerId     Int
}

model SourceTag {
  tag      Tag?    @relation(fields: [tagId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  tagId    Int
  source   Source? @relation(fields: [sourceId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sourceId Int

  @@id([sourceId, tagId])
}

// model SourceTag {
//   id       Int    @id @default(autoincrement())
//   source   Source @relation(fields: [sourceId], references: [id])
//   tag      Tag    @relation(fields: [tagId], references: [id])
//   sourceId Int
//   tagId    Int

//   @@id([sourceId][tagId])
// }
